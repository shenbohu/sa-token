spring:
  shardingsphere:
    datasource:
      names: sharding-order-system
      sharding-order-system:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/order_system?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&useTimezone=true
        username: root
        password: root
    props:
      # 日志显示SQL
      sql.show: true
    sharding:
      tables:
        # 订单表 分表：20
        order:
          # 真实表 order_0
          actualDataNodes: sharding-order-system.order_$->{0..19}
          # 分库策略
          databaseStrategy:
            none:
          # 分表策略
          tableStrategy:
            inline:
              shardingColumn: order_key
              # 分片算法行表达式，需符合groovy语法 '& Integer.MAX_VALUE' 位运算使hash值为正数
              algorithmExpression: order_$->{(order_key.hashCode() & Integer.MAX_VALUE) % 20}
